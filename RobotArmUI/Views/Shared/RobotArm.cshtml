
@{
    ViewBag.Title = "RobotArm";
}
<link href="~/Content/robotArmStyle.css" rel="stylesheet" />

<div>
    <div class="loader"></div>
    <div><h2>RobotArm</h2></div>
</div>
<div class="optionsBar">
    <div>
        <div class="inputBarDiv">
            <div class="inputBarDiv1">
                @Html.Label("L1", "L1")
                @Html.TextBox("txtL1", "10")
            </div>
            <div class="inputBarDiv2">
                <div>
                    @Html.Label("Theta1Min", "Theta1 Min")
                    @Html.TextBox("txtTheta1Min", "0")
                </div>
                <div>
                    @Html.Label("Theta1Max", "Theta1 Max")
                    @Html.TextBox("txtTheta1Max", "1.5")
                </div>
            </div>
        </div>
        <div class="inputBarDiv">
            <div class="inputBarDiv1">
                @Html.Label("L2", "L2")
                @Html.TextBox("txtL2", "7")
            </div>
            <div class="inputBarDiv2">
                <div>
                    @Html.Label("Theta2Min", "Theta2 Min")
                    @Html.TextBox("txtTheta2Min", "0")
                </div>
                <div>
                    @Html.Label("Theta2Max", "Theta2 Max")
                    @Html.TextBox("txtTheta2Max", "3.1")
                </div>
            </div>
        </div>
    </div>
    <div>
        @Html.Label("AgleStep", "Agle Step")
        @Html.TextBox("txtAgleStep", "0.1")
    </div>

    <div class="actionBar">
        <button id="drawPoint" title="Draw Point">Draw Test Points</button>
        <button id="Calculate" title="Draw Point">Generate Coordinates</button>
        <button id="drawRobotArm" title="Draw Robot Arm">Draw Robot Arm</button>
        <button id="trainANFIS" title="Train ANFIS">Train ANFIS</button>
        <button id="calculateUsingAnfis" title="Calculate Angles using ANFIS">Calculate Angles using ANFIS</button>
        <br/>
        <button class="js-CameraPosition" data-value="left" title="Camera Left"><i class="arrow left"></i></button>
        <button class="js-CameraPosition" data-value="right" title="Camera Right"><i class="arrow right"></i></button><br/>
        <button class="js-CameraPosition" data-value="up" title="Camera Up"><i class="arrow up"></i></button>
        <button class="js-CameraPosition" data-value="down" title="Camera Down"><i class="arrow down"></i></button><br/>
        <button class="js-CameraPosition zoom" data-value="in" title="Camera In"><span class="zoom-inner"></span></button>
        <button class="js-CameraPosition zoom1" data-value="out" title="Camera Out"><span class="zoom-inner"></span></button>
    </div>
    
    
    
</div>

<div class="positionsDiv">
    @Html.Label("EndPositions", "End Postions of the RobotArm:")<br/>
    <select id="positionsList" multiple size="10"></select>
</div>

<div id="robotArmGraphic" class="robotArmGraphic"></div>


@Scripts.Render("~/bundles/jquery")
<script src="~/Scripts/three.min.js"></script>
<script src="~/Scripts/RobotArmScript.js"></script>
<script>
    var RobotArm = window.RobotArm;
    RobotArm.InitializeScene();

    function hideLoader() {
        $(".loader").hide();
    };
    function showLoader() {
        $(".loader").show();
    };

    $(document).ready(function () {

        hideLoader();

        $("#drawPoint").click(function() {
            RobotArm.DrawPoint(-10, 5, 0);
            RobotArm.DrawPoint(0, 5, 0);
            RobotArm.DrawPoint(-10, 0, 0);
            RobotArm.RenderScene();
        });

        $(".js-CameraPosition").click(function () {
            var value = $(this).attr("data-value");
            RobotArm.ChangeCameraPosition(value);
            RobotArm.RenderScene();
        });

        $("#Calculate").click(function () {
            RobotArm.ClearScene();
            $('#positionsList').find('option').remove();
            var l1 = $("#txtL1").val();
            var l2 = $("#txtL2").val();
            var theta1Min = $("#txtTheta1Min").val();
            var theta1Max = $("#txtTheta1Max").val();
            var theta2Min = $("#txtTheta2Min").val();
            var theta2Max = $("#txtTheta2Max").val();
            var agleStep = $("#txtAgleStep").val();
            $.ajax({
                method: "POST",
                url: '@Url.Action("GetCoordinates", "RobotArm")',
                data: { l1: l1, l2: l2, theta1Min: theta1Min, theta1Max: theta1Max, theta2Min: theta2Min, theta2Max: theta2Max, agleStep: agleStep },
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    if (data.Success == "false") {
                        alert(data.Message);
                        return;
                    }
                    data.Positions.map((point, index) => {
                        var x = point.X;
                        var y = point.Y;
                        var z = point.Z;
                        $("#positionsList").append(`<option value=${index} data-value='{"x": ${x}, "y": ${y}, "z": ${z}}'>(${x}, ${y}, 0)</option>`);
                        RobotArm.DrawPoint(x, y, z);
                    });
                    RobotArm.RenderScene();
                },
                fail: function(data) {
                    alert(data);
                }

            });
        });

        $("#drawRobotArm").click(() => {
            if ($('#positionsList option:selected').length === 0) {
                alert("No position selected. Select option from the list.");
                return;
            }
            var endPoint = JSON.parse($('#positionsList option:selected').eq(0).attr("data-value"));
            $.ajax({
                method: "POST",
                url: '@Url.Action("CalculateJointPostions", "RobotArm")',
                data: { x: endPoint.x, y: endPoint.y },
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    if (data.Success == "false") {
                        alert(data.Message);
                        return;
                    }
                    const positions = data.Positions;
                    RobotArm.ClearLatestRobotArmComponents();
                    positions.map((point) => {
                        RobotArm.DrawRobotArm({x: point.X, y: point.Y, z: point.Z }, endPoint);
                    });
                    RobotArm.RenderScene();

                },
                fail: function (data) {
                    alert(data);
                }
            });

        });

        $("#positionsList").change(() => {
            var position = JSON.parse($('#positionsList option:selected').eq(0).attr("data-value"));
            RobotArm.HighlightPosition(position.x, position.y, position.z);
        });

        $("#trainANFIS").click(() => {
            showLoader();
            $.ajax({
                method: "POST",
                url: '@Url.Action("TrainANFIS", "RobotArm")',
                data: { ruleNumber: 25, maxIterations: 150 },
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    if (data.Success == "false") {
                        alert(data.Message);
                        return;
                    }

                    hideLoader();
                },
                fail: function (data) {
                    alert(data);
                    hideLoader();
                }
            });
        });

        $("#calculateUsingAnfis").click(() => {
            if ($('#positionsList option:selected').length === 0) {
                alert("No position selected. Select option from the list.");
                return;
            }
            var endPoint = JSON.parse($('#positionsList option:selected').eq(0).attr("data-value"));
            $.ajax({
                method: "POST",
                url: '@Url.Action("CalculateAngelsUsingANFIS", "RobotArm")',
                data: { x: endPoint.x, y: endPoint.y },
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    if (data.Success == "false") {
                        alert(data.Message);
                        return;
                    }


                },
                fail: function (data) {
                    alert(data);
                }
            });

        });

    }); // End document ready
</script>
